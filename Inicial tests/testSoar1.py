#!/usr/bin/env python3
# Rênitton Scremin (UPinC)
# 18/04/2023
# Protótipo de identificação dos pré-definidos tipos de inteligências.
# SOAR agent test 1.

from arquivo_auxiliar import *

import sys
sys.path.append('../../src/')

from lib.pysoarlib import *
import os

curdir = os.path.abspath('')


def input_to_agent(agent, novo, q):
    '''
        If match question then inc novo value.
    '''
    # Add the information to the agent's state
    # Execute the command on the agent
    command = f'add-wme <s> ^question <{q}>'
    agent.execute_command(command)

    command = f'add-wme <s> ^novo <{novo}>'
    agent.execute_command(command)
    
    # Run the agent for one decision cycle to process the input
    agent.execute_command("run")

    # Retrieve the output generated by the command
    output = agent.get_output() # 

    # Print the output
    print(output) # <<< test 1 => get the shape of output answer >>>


agent_raw = trechos() # arquivo_auxiliar.py

# Create a SOAR agent object
agent = pysoarlib.SoarAgent(
    agent_raw=agent_raw, # feature agent
    config_filename=cwd + '/default.config', # path config
)

# Initialize the agent
agent.initialize()

# Operate the agent
li_perguntas = li_perguntas() # arquivo_auxiliar.py
qnt_perguntas = len(li_perguntas)
c=0
while c < qnt_perguntas:
    
    q = li_perguntas[c]['pergunta']
    pergunta = q.replace("-", " ")
    a = q = li_perguntas[c]['resposta_a']
    b = q = li_perguntas[c]['resposta_b']
    c = q = li_perguntas[c]['resposta_c']

    print('')
    print(f'{pergunta}?')
    print('')

    word_input = input(str(f'Responda (A), (B) ou (C) | ou (fim): '))

    if word_input == 'fim':
        break

    if word_input == 'a' or word_input == 'A':
        word_input = 2
    if word_input == 'b' or word_input == 'B':
        word_input = 1
    if word_input == 'c' or word_input == 'C':
        word_input = 0

    peso_resposta = int(word_input)

    # Input some information to the agent
    input_to_agent(agent, peso_resposta, q) # peso_resposta == resposta & q == pergunta

    c += 1

# Shutdown the agent
agent.shutdown()